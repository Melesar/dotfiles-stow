[alias]
	s = status -s

	c = commit
	ca = commit --amend --no-edit
	cp = commit --patch

	p = pull --rebase
	pf = push --force-with-lease

	a = add
	ai = add -i
	ap = add -p
	aa = add -A

	m = merge --no-edit

	sw = switch

	; Diff unstaged
	d = diff --output-indicator-new=' ' --output-indicator-old=' '

	; Diff staged
	ds = d --staged

	; Show pretty log
 	l = log --format=format:'%C(bold blue)%h%C(reset) %C(bold green)(%an)%C(reset) %C(white)%s%C(reset) %C(dim white)- %ar%C(reset)%C(auto)%d%C(reset)'

	; Short log just to view the most recent commits
	ls = l -10

	; Show log with the graph
	lg = l --graph

	; Show detailed log (with patches for each commit)
 	ld = lg -p

	; Show local branches
	b = branch --format='%(if)%(HEAD)%(then)%(color:green)* %(end)%(refname:short) %(color:yellow)%(upstream:track,nobracket)'

	; Copy current branch name
	cpb = !git rev-parse --abbrev-ref HEAD | xargs echo -n | pbcopy

	nuke = !git reset --hard HEAD && git clean -fd

	; Edit global config file
	econf = config --global --edit

	; Discard changes in the unstaged file
	re = restore

	; Unstage a file
	res = restore --staged

	; Unstage and discard changes to a file
	red = restore --staged --worktree

[core]
	pager = delta
	compression = 9
	preloadindex = true
	editor = hx

[interactive]
	diffFilter = delta --color-only

[delta]
	navigate = true
	dark = true
	line-numbers = true
	side-by-side = true

[push]
	autoSetupRemote = true

[pull]
	rebase = true

[rebase]
	autosquash = true

[color.status]
	added = "green bold"
	changed = "yellow bold"
	untracked = "red bold"

[merge]
	conflictstyle = zdiff3

[url "git@github.com:Melesar"]
	insteadOf = "me:"

[url "git@github.com:"]
	insteadOf = "gh:"

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
